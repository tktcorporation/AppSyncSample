AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  awsRegion:
    Type: String
    Default: ap-northeast-1
  awsAccount:
    Type: String
    Default: set-your-account-here
Resources:
  AppSyncDynamoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - appsync.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /cloudformation/
      RoleName:
        Fn::Join:
        - ''
        - - Ref: awsRegion
          - -appsync-dynamodb-role
      Policies:
      - PolicyName: test-appsync-dynamodb
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:dynamodb:'
                - Ref: awsRegion
                - ':'
                - Ref: awsAccount
                - :table/users
            - Fn::Join:
              - ''
              - - 'arn:aws:dynamodb:'
                - Ref: awsRegion
                - ':'
                - Ref: awsAccount
                - :table/users/*
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: users
  AppSyncGraphqlAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: GraphqlAPI
      AuthenticationType: API_KEY
  AppSyncAPIKey:
    Type: AWS::AppSync::ApiKey
    DependsOn:
    - AppSyncGraphqlAPI
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncGraphqlAPI
        - ApiId
      Expires: 1609426799
  AppSyncSchema:
    Type: AWS::AppSync::GraphQLSchema
    DependsOn:
    - AppSyncGraphqlAPI
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncGraphqlAPI
        - ApiId
      Definition: "input CreateUserInput {\n    name: String!\n}\ninput DeleteUserInput\
        \ {\n    id: ID!\n}\ntype Mutation {\n    createUser(input: CreateUserInput!):\
        \ User\n    updateUser(input: UpdateUserInput!): User\n    deleteUser(input:\
        \ DeleteUserInput!): User\n}\ntype Query {\n    getUser(id: ID!): User\n}\n\
        input UpdateUserInput {\n    id: ID!\n    name: String!\n}\ntype User {\n\
        \    id: ID!\n    name: String!\n}\nschema {\n    query: Query\n    mutation:\
        \ Mutation\n}\n"
  AppSyncUserDataSource:
    Type: AWS::AppSync::DataSource
    DependsOn:
    - AppSyncGraphqlAPI
    - AppSyncDynamoRole
    - UserTable
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncGraphqlAPI
        - ApiId
      Name: users
      Type: AMAZON_DYNAMODB
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncDynamoRole
        - Arn
      DynamoDBConfig:
        AwsRegion:
          Ref: awsRegion
        TableName: users
  AppSyncCreateUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
    - AppSyncGraphqlAPI
    - AppSyncUserDataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncGraphqlAPI
        - ApiId
      TypeName: Mutation
      FieldName: createUser
      DataSourceName:
        Fn::GetAtt:
        - AppSyncUserDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\" : \"2017-02-28\",\n    \"operation\"\
        \ : \"PutItem\",\n    \"key\" : {\n        \"id\": $util.dynamodb.toDynamoDBJson($util.autoId()),\n\
        \    },\n    \"attributeValues\" : $util.dynamodb.toMapValuesJson($ctx.args.input),\n\
        \    \"condition\": {\n        \"expression\": \"attribute_not_exists(#id)\"\
        ,\n        \"expressionNames\": {\n            \"#id\": \"id\",\n        }\n\
        \    }\n}\n"
      ResponseMappingTemplate: $util.toJson($ctx.result)
  AppSyncUpdateUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
    - AppSyncGraphqlAPI
    - AppSyncUserDataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncGraphqlAPI
        - ApiId
      TypeName: Mutation
      FieldName: updateUser
      DataSourceName:
        Fn::GetAtt:
        - AppSyncUserDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\" : \"2017-02-28\",\n    \"operation\"\
        \ : \"UpdateItem\",\n    \"key\" : {\n        \"id\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.id)\n\
        \    },\n    \"update\" : {\n        \"expression\" : \"SET #n = :name\",\n\
        \        \"expressionNames\": {\n            \"#n\": \"name\"\n        },\n\
        \        \"expressionValues\": {\n            \":name\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.name)\n\
        \        }\n    }\n}\n"
      ResponseMappingTemplate: $util.toJson($ctx.result)
  AppSyncDeleteUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
    - AppSyncGraphqlAPI
    - AppSyncUserDataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncGraphqlAPI
        - ApiId
      TypeName: Mutation
      FieldName: deleteUser
      DataSourceName:
        Fn::GetAtt:
        - AppSyncUserDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\" : \"2017-02-28\",\n    \"operation\"\
        \ : \"DeleteItem\",\n    \"key\" : {\n        \"id\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.id),\n\
        \    }\n}\n"
      ResponseMappingTemplate: $util.toJson($ctx.result)
  AppSyncGetUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
    - AppSyncGraphqlAPI
    - AppSyncUserDataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncGraphqlAPI
        - ApiId
      TypeName: Query
      FieldName: getUser
      DataSourceName:
        Fn::GetAtt:
        - AppSyncUserDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2017-02-28\",\n    \"operation\"\
        : \"GetItem\",\n    \"key\": {\n        \"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id),\n\
        \    }\n}\n"
      ResponseMappingTemplate: $util.toJson($ctx.result)
